apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: simple-task
spec:
  steps:
    - name: simple-step
      image: ibmcom/pipeline-base-image:latest
      env:
        - name: BUILD_NUMBER
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/build-number']
      command: ["bash", "-c"]
      args:
        - echo $BUILD_NUMBER;
          sleep 5;
          echo "COMPLETED"
    # - name: use-cd-deploy-base
    #   image: us.icr.io/opentoolchain/cd-deploy-base:deploy
    #   env:
    #     - name: BUILD_NUMBER
    #       valueFrom:
    #         fieldRef:
    #           fieldPath: metadata.annotations['devops.cloud.ibm.com/build-number']
    #   command: ["bash", "-c"]
    #   args:
    #     - env;
    #       echo "I'm Done!"
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: echo-props
spec:
  params:
    - name: quote
      description: Simple quoted property
    - name: noquote
      description: Simple un-quoted property
    - name: environment_value
      description: Value from pipeline, trigger, or run property    
    - name: timestamp
      descripton: Timestamp of git commit if present
  steps:
    - name: show-props
      image: ubuntu
      env:
        - name: QUOTE
          value: $(inputs.params.quote)
        - name: NOQUOTE
          value: $(inputs.params.noquote)
        - name: ENVIRONMENT_VALUE
          value: $(inputs.params.environment_value)
        - name: TIMESTAMP
          value: $(params.timestamp)  
      command: ["/bin/bash", "-c"]
      args:
        - echo -e "The \033[36mquote\033[0m value from properties is >>";
          echo $QUOTE;
          echo "";
          echo -e "The \033[36menvironment\033[0m value from properties is >>";
          echo $ENVIRONMENT_VALUE;
          echo "";
          echo -e "The \033[36mtimestamp\033[0m value from properties is >>";
          echo $TIMESTAMP
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cm-echo-props
spec:
  steps:
    - name: cm-show-props
      image: ubuntu
      env:
        - name: SECURE_VALUE
          valueFrom:
            secretKeyRef:
              name: secure-properties
              key: apikey
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: environment-properties
              key: environment  
      command: ["/bin/bash", "-c"]
      args:
        - echo -e "\033[36menvironment\033[0m from ConfigMap is >>";
          echo $ENVIRONMENT;
          echo "";
          echo -e "\033[36mapikey\033[0m from Secrets is >>";
          echo $SECURE_VALUE;
          test=`echo ${SECURE_VALUE}`;
          echo ${test}
          echo SLEEPING FOR 7 mins
          sleep 420

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cm-all-props
spec:
  steps:
    - name: cm-show-environment
      image: ubuntu
      envFrom:
        - configMapRef:
              name: environment-properties 
      command: ["/bin/bash", "-c"]
      args:
        - echo -e "The \033[36menvironment\033[0m for this Step is ";
          env;
          echo "";
          echo "One sample property from this environment is >>";
          echo "$quote"
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cm-secrets-props
spec:
  steps:
    - name: cm-show-full-env
      image: ubuntu
      envFrom:
        - configMapRef:
            name: environment-properties
        - secretRef:
            name: secure-properties     
      command: ["/bin/bash", "-c"]
      args:
        - echo -e "The \033[36menvironment\033[0m for this Step is ";
          env
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cm-toolchain-props
spec:
  steps:
    - name: cm-show-toolchain-env
      image: ubuntu
      envFrom:
        - configMapRef:
            name: toolchain  
      command: ["/bin/bash", "-c"]
      args:
        - set -x
          echo -e "The \033[36menvironment\033[0m for this Step is ";
          env
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: call-the-pipe-cleaner
spec:
  steps:
    - name: call-another-pipeline
      image: ubuntu
      envFrom:
        - configMapRef:
            name: environment-properties     
      command: ["/bin/bash", "-c"]
      args:
        - set -x
          apt-get install -y wget;
          wget -qO- https://devops-api.us-south.devops.dev.cloud.ibm.com/v1/tekton-webhook/b9dd6e81-f195-40ab-b308-502b15ea88a6/run/29da21ff-6d4e-4e1d-9bac-b5db4eed4cbb --post-data="" | jq '.'
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: big-echo-task
spec:
  params:
    - name: log-line-bytes
      description: Number of bytes in the log line
      default: "100000"
      type: string
    - name: num-log-lines
      description: Number of lines to print to the log
      default: "100"
      type: string
  steps:
    - name: big-log-echo
      image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi@sha256:4aaabf49950796d9004f6e4f04ff53ab24dcd3fd29d8cc719a9b81f7546d31f2
      env:
        - name: LOG_LINE_BYTES
          value: $(params.log-line-bytes)
        - name: LOG_LINES
          value: $(params.num-log-lines)
      script: |
        #!/usr/bin/env bash

        # Create a file with LOG_LINE_BYTES random characters in a single line
        < /dev/urandom tr -dc "[:alnum:]" | head -c${LOG_LINE_BYTES} > file.txt

        # cat the file to stdout LOG_LINES times
        for i in $(seq 0 ${LOG_LINES})
        do
          cat file.txt
        done