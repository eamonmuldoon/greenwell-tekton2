apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: endpoint-task
spec:
  params:
    - name: public-endpoint
      description: Publicly available endpoint
    - name: private-endpoint
      description: Privately accessible only endpoint
  steps:
    - name: network-test-endpoints
      image: jerhoconnor/toolbox
      imagePullPolicy: IfNotPresent
      onError: continue
      envFrom:
        - configMapRef:
            name: environment-properties
        - secretRef:
            name: secure-properties     
      command: ["/bin/bash", "-c"]
      args:
        - ${debug};
          echo -e "Testing \033[36mPIPELINE\033[0m endpoints";
          echo =================;
          echo = PUBLIC;
          echo =================;
          echo dig +short ${public_endpoint}; 
          dig +short ${public_endpoint}; 
          echo curl https://${public_endpoint}/status;
          curl https://${public_endpoint}/status;
          echo;
          echo =================;
          echo = PRIVATE;
          echo =================;
          echo dig +short ${private_endpoint}; 
          dig +short ${private_endpoint}; 
          echo curl https://${private_endpoint}/status;
          curl https://${private_endpoint}/status;
      steps:
    - name: cos-test-endpoints
      image: jerhoconnor/toolbox
      imagePullPolicy: IfNotPresent
      envFrom:
        - configMapRef:
            name: environment-properties
        - secretRef:
            name: secure-properties     
      command: ["/bin/bash", "-c"]
      args:
        - ${debug};
          echo -e "Testing \033[36mCOS\033[0m endpoints";
          env;
          ibmcloud config --check-version=false;
          ibmcloud login --apikey ${MYAPIKEY} -r us-south;
          ibmcloud plugin install -f cloud-object-storage;
          ibmcloud cos config crn --crn ${COS_CRN};
          echo "TRYING PUBLIC COS ENDPOINT";
          ibmcloud cos config endpoint-url --url ${public_cos};
          ibmcloud cos buckets;
          ibmcloud cos objects --bucket ${bucket_name};
          echo "TRYING COS DOCUMENTED ENDPOINT FOR VPC";
          ibmcloud cos config endpoint-url --url ${direct_cos};
          ibmcloud cos buckets;
          ibmcloud cos objects --bucket ${bucket_name};
          echo "TRYING PRIVATE COS ENDPOINT";
          ibmcloud cos config endpoint-url --url ${private_cos};
          ibmcloud cos buckets;
          ibmcloud cos objects --bucket ${bucket_name};
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: testing-dns
spec:
  steps:
    - name: dig-tracing
      image: jerhoconnor/toolbox
      imagePullPolicy: IfNotPresent
      envFrom:
        - configMapRef:
            name: environment-properties
        - secretRef:
            name: secure-properties     
      command: ["/bin/bash", "-c"]
      args:
        - env;
          echo -e "Testing \033[36mPUBLIC\033[0m endpoint";
          dig +trace s3.us.cloud-object-storage.appdomain.cloud;
          echo -e "Testing \033[36mDIRECT\033[0m endpoint";
          dig +trace s3.direct.us-south.cloud-object-storage.appdomain.cloud;
          echo -e "Testing \033[36mPRIVATE\033[0m endpoint";
          dig +trace s3.private.us-south.cloud-object-storage.appdomain.cloud;
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cm-toolchain-props
spec:
  steps:
    - name: cm-show-toolchain-env
      image: ubuntu
      envFrom:
        - configMapRef:
            name: toolchain  
      command: ["/bin/bash", "-c"]
      args:
        - set -x
          echo -e "The \033[36menvironment\033[0m for this Step is ";
          env
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: call-the-pipe-cleaner
spec:
  steps:
    - name: call-another-pipeline
      image: ubuntu
      envFrom:
        - configMapRef:
            name: environment-properties     
      command: ["/bin/bash", "-c"]
      args:
        - set -x
          apt-get install -y wget;
          wget -qO- https://devops-api.us-south.devops.dev.cloud.ibm.com/v1/tekton-webhook/b9dd6e81-f195-40ab-b308-502b15ea88a6/run/29da21ff-6d4e-4e1d-9bac-b5db4eed4cbb --post-data="" | jq '.'
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cm-event-parameters
spec:
  steps:
    - name: cm-show-event-env
      image: ubuntu
      envFrom:
        - configMapRef:
            name: event-parameters  
      command: ["/bin/bash", "-c"]
      args:
        - set -x
          echo -e "The \033[36menvironment\033[0m including \033[36mevent-parameters\033[0m is ";
          env
    - name: cm-show-event-keys
      image: ubuntu
      envFrom:
        - configMapKeyRef:
            name: eventHeader
        - configMapKeyRef:
            name: eventBody         
            apiVersion: tekton.dev/v1beta1
---            
kind: Task
metadata:
  name: echo-secrets
spec:
  steps:
    - name: show-secrets
      image: ubuntu
      env:
        - name: SECURE_VALUE
          valueFrom:
            secretKeyRef:
              name: secure-properties
              key: apikey
      command: ["/bin/bash", "-c"]
      args:
        - set -x
          echo -e "The \033[36msecure-properties apikey \033[0m is ";
          echo $SECURE_VALUE | base64
          echo FIN
    - name: cm-show-event-keys
      image: ubuntu
      envFrom:
        - configMapKeyRef:
            name: eventHeader
        - configMapKeyRef:
            name: eventBody     